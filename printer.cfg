# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v2.0. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader" and USB communication. Also,
# select "Enable extra low-level configuration options" and configure
# "GPIO pins to set at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: ^PC2
position_endstop: -0.05
#position_endstop: 10
position_max: 240
position_min: -2.5
#endstop_pin: probe:z_virtual_endstop # this one is to replace the 3d Touch

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD2
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 250

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
hold_current: 0.500
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC3
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan nozzle_cooling_fan]
pin: PC7

# [fan]
# pin: PC6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_33FFD3055356343508661143-if00

[mcu rpi]
serial: /tmp/klipper_host_mcu
# pin_map: arduino

###################################
# [adxl345]
# cs_pin: rpi:None

# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#   155,155,20  # an example
###################################

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100
#max_accel: 7000
#max_accel_to_decel: 7000
#max_z_velocity: 40 
#max_z_accel: 100
#square_corner_velocity: 8


[static_digital_output usb_pullup_enable]
pins: !PA14

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>

# See the sample-lcd.cfg file for definitions of common LCD displays.

# Docs from https://docs.fluidd.xyz/configuration/initial_setup
[virtual_sdcard]
path: ~/gcode_files

[pause_resume]

[display_status]

######################################################################
# Start My Macros
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

######################################################################
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}

  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
######################################################################

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
######################################################################
[gcode_macro PARK]
gcode:
   # G1 X125 Y200.0 Z200.0 F4000
    # G1 X125 Y200.0 Z200.0 F4000
    G0 Z50
    
[gcode_macro FILAMENT_LOAD]
gcode:
    M83 ; set e to relative positioning
    G92 E0.0
    G1 E40 F1000 ; Initially go fast
    G92 E0.0
    G1 E100 F200 ; then go slow
    G92 E0.0
######################################################################



######################################################################
######################################################################    
# End my macro
###################################################################### 




[bltouch]                          # enable for BLTouch - fast-mode
pin_up_reports_not_triggered: True
set_output_mode: 5V
stow_on_each_sample: True
probe_with_touch_mode: True
#sensor_pin: PC14 # ^PB1
sensor_pin: ^PC14 #^PB1
control_pin: PA1 #PB0 # conflict
#pin_up_touch_mode_reports_triggered: True
pin_up_touch_mode_reports_triggered: False
probe_with_touch_mode: True
x_offset: 43                          # modify as needed for bltouch location
y_offset: -6                          # modify as needed for bltouch location
z_offset: 0.0                         # modify as needed for bltouch or run PROBE_CALIBRATE
speed: 2 #10
samples: 3
sample_retract_dist: 5.0              # Can be set lower, example 2.5 depending on height of bltouch from bed
lift_speed: 40
samples_tolerance_retries: 3
pin_move_time: 1.500



# [bed_mesh]                            # enable for BLTouch
# speed: 100 #300
# #mesh_min: 50, 0
# #mesh_max: 290, 290
# #algorithm: bicubic
# algorithm: lagrange # bicubic or median 
# #probe_count: 7,7                      # 49 points due to large bed size
# horizontal_move_z: 5
# mesh_min: 95, 5
# mesh_max: 275, 215
# probe_count: 5, 5
# #probe_count: 2, 2
# #mesh_min: 35,6
# #mesh_max: 210, 198

[bed_mesh]
speed: 200
horizontal_move_z: 5
mesh_min: 95,5
mesh_max: 275, 215
probe_count: 5,5
move_check_distance: 5
split_delta_z: .025
fade_start: 1
fade_end: 10
fade_target: 0
mesh_pps: 2,3
algorithm: bicubic
bicubic_tension: 0.2
relative_reference_index: 7

# ======================================================================
# MENU MACRO
# ======================================================================

#[bltouch]
#sensor_pin: ^P1.24
#control_pin: P1.26

[safe_z_home]
home_xy_position: 115,115 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5



######################################################################
# 128x64 Full Graphic Creality CR10 / ENDER 3 stockdisplay
######################################################################

# This section is used for a Creality "12864" display with a single
# ribbon cable between the display's EXP3 plug and the
# micro-controller board's EXP1 connector.

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

# [output_pin beeper]
# pin: EXP1_1


### menu main ###
[menu __main]
type: list
name: Main/

######################################################################
[output_pin BEEPER_pin]
pin: EXP1_1
#   Beeper pin. This parameter must be provided.
#   ar37 is the default RAMPS/MKS pin.
pwm: True
#   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0
#   Silent at power on, set to 1 if active low.
shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001
#   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz
#   Although not pitch perfect.

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0


######################################################################
[fan_generic test]
# test in GPIO
pin: rpi:gpio26
max_power: 1
shutdown_speed: 0
kick_start_time: 0.1
off_below: 0.10

######################################################################
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_fan my_temp_fan]
pin: !PC6
max_power: 1
shutdown_speed: 0
cycle_time: 0.010
hardware_pwm: false
kick_start_time: 0.100
# sensor_type: NTC 100K beta 3950
sensor_type: temperature_host
# sensor_pin: aux:analog14
min_temp: 0
max_temp: 80
target_temp: 35
max_speed: 1
min_speed: 0.2
control: watermark
# gcode_id: rasppi

######################################################################
# [temperature_fan rasppi]
# pin: rpi:ar34
# max_power: 1
# shutdown_speed: 0
# cycle_time: 0.010
# hardware_pwm: false
# kick_start_time: 0.100
# sensor_type: NTC 100K beta 3950
# sensor_type: temperature_host
# sensor_pin: aux:analog14
# min_temp: 12
# max_temp: 60
# target_temp: 36
# max_speed: 0.5
# min_speed: 0.001
# control: watermark
# gcode_id: rasppi

######################################################################
[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100
######################################################################

# https://github.com/meteyou/mainsail/issues/74
# [temperature_fan rasppi]
# pin: rpi:ar34
# max_power: 1
# shutdown_speed: 0
# cycle_time: 0.010
# hardware_pwm: false
# kick_start_time: 0.100
# sensor_type: NTC 100K beta 3950
# sensor_pin: rpi:analog14
# min_temp: 12
# max_temp: 60
# target_temp: 36
# max_speed: 0.5
# min_speed: 0.001
# control: watermark
# gcode_id: rasppi
# ======================================================================

#[filament_switch_sensor Filament_Runout]
#pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#switch_pin: !PC15
#   The pin on which the switch is connected. This parameter must be
#   provided.
######################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.090833, -0.026667, -0.030000, -0.075000, -0.078333
#*# 	-0.049167, 0.041667, 0.000000, -0.131667, -0.149167
#*# 	-0.031667, -0.010000, -0.078333, -0.225833, -0.300833
#*# 	-0.178333, -0.095833, -0.133333, -0.229167, -0.301667
#*# 	-0.251667, -0.235000, -0.235000, -0.265000, -0.273333
#*# tension = 0.2
#*# min_x = 95.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 3
#*# min_y = 5.0
#*# x_count = 5
#*# max_y = 215.0
#*# mesh_x_pps = 2
#*# max_x = 275.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 34.126
#*# pid_ki = 3.160
#*# pid_kd = 92.140
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 53.060
#*# pid_ki = 1.099
#*# pid_kd = 640.698
